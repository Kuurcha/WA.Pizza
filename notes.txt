В слое Core Конкретные модели и абстрактные модели

//Data db context и Entity Framework

//Service - сервисы по взаимодействию с бд

//Abstractions - все необходимые интерфейсы

//Shared kernel нету. 

09.04.2022
//Просто модели
//Business flow логика
//OrderDataService - переименовать
//CatalogDataService => BasketDataService => OrderDataService - реализовать 
//Получение всего каталога => Создание и редактирование корзины => Создание корзины и просмотр ее состояния
//[Feture-3] Implement main costumer flow
//для теста

14.04.2022
//DTO, туда же конверторы CatalogItem => BasketItem => OrderItem, избавить от всей не нужной информации
//DTO - request/response (Add BasketItemRequest - Объект по добавлению айтемов внутрь баскета). С помощью набора полей создать/получить (в данном случае BasketItem)
//Mapster - https://github.com/MapsterMapper/Mapster/wiki/Basic-usages. Маппинг происходит (project to type) на уровне бд.	

//Коллекцию на другой эндпоинт
22.04.2022

BasketItem - независим
Избавиться от навигационных свойств
Зачем нужны навигационные свойства? (Необязательны)
Параллельные и асинхронное выполнение?
Добавление в контекст

await - машина состояний

28.04.20222
BasketItemDataService - удалить
BasketDataService - должен содержать AddItem, UpdateItem, DeleteItem, ClearBasket, BindBuyerToBasket

AddItemBasketRequest - Контроллер. 
Запросить CatalogItem, найти попытаться найти BasketItem

Request - прием модели
Response - ответ

04.04.2022

// End-to-end test - эмуляция запросов - все зависимости

// Unit test - проверяет 1-цу поведения, быстрые

// Паттерн - Arrange Act Assert (AAA), разделение на блоке, Arrange подготовка, Act - вызов, Assert - результат. 

// Тестировать поведение

// Integrated test  - настоящие зависимости, включая бд

// Часть зависимостей, нет например внешнего Api

// Mock библиотека. В основном Интеграционные тесты. 

// Несколько подразделов функциональности - основная (бизнес логика) - имеет 99% тестов. Второстипенный (вспомогательный) - зависит правильность расчетов, удобность юзера, меньшие убытки. (Как минимум 60%).

// Третья группа не такой важный для аутсорс компании. некритичная интеграция с  внешними источниками. 20% покрытия

// "Принципы юнит-тестирования", Хориков Владимир

// Тестирование только публичных методов (TDD). Тест проверяет бизнес кейс, потом писать функционал

23.05.20222
//X-unit collection,  посмотреть
//Database collection fixture
